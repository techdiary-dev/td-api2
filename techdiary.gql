# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Admin {
  name: String!
  username: String!
  email: String!
  password: String!
}

type Session {
  sub: ID!
  domain: String!
  token: String!
}

type SessionPayload {
  resourceCount: Int!
  pageCount: Int!
  currentPage: Int!
  data: [Session!]!
}

type Article {
  _id: ID!
  title: String!
  slug: String!
  excerpt(wordsCount: Float = 30): String!
  body: String!
  isPublished: Boolean!
  isPinned: Boolean
  thumbnail: String
  tags: [String!]
  author: User
  createdAt: String!
  updatedAt: String!
  series: [Article!]
  seriesName: String
  url: String!
}

type ArticlePayload {
  resourceCount: Int!
  pageCount: Int!
  currentPage: Int!
  data: [Article!]!
}

type LinkType {
  text: String!
  link: String!
}

type WorkInfo {
  name: String!
  designation: String!
  startTime: String!
  endTime: String!
}

type User {
  _id: ID!
  name: String!
  username: String!
  email: String
  profilePhoto: String
  githubUID: String!
  education: String
  designation: String
  location: String
  bio: String
  links: [LinkType!]
  workInfo: [WorkInfo!]
  skills: [String!]
  articles(pagination: PaginationInput): ArticlePayload
}

input PaginationInput {
  limit: Int
  sort: String
  page: Int
}

type AuthPayload {
  domain: AUTH_DOMAIN!
  token: String!
}

enum AUTH_DOMAIN {
  ADMIN
  USER
}

input LinkInput {
  text: String!
  link: String!
}

input WorkInfoInput {
  name: String!
  designation: String!
  startTime: String!
  endTime: String!
}

type Query {
  sessions(pagination: PaginationInput): SessionPayload!
  getAdmin: Admin
  articles(pagination: PaginationInput): ArticlePayload!
  article(idOrSlug: idOrSlugArg!): Article!
  me: User
  profile(username: String!): User!
}

input idOrSlugArg {
  _id: ID
  slug: String
}

type Mutation {
  removeSession(domain: String!, sub: String!): String!
  createArticle(data: CreateArticleInput!): Article!
  updateArticle(data: updateArticleInput, _id: ID!): Article!
  deleteArticle(_id: ID!): Article!
  registerAdmin(data: CreateAdminInput!): Admin!
  loginAdmin(data: LoginDTO!): AuthPayload!
  adminLogout: String!
  login(oAuthCode: String!): AuthPayload!
  logout: String!
  updateProfile(data: UpdateUserInput!): User!
}

input CreateArticleInput {
  title: String
  body: String
  isPublished: Boolean!
  thumbnail: String
  tags: [String!]
  seriesName: String
}

input updateArticleInput {
  title: String
  body: String
  tags: [String!]
  thumbnail: String
  isPublished: Boolean
  seriesName: String
}

input CreateAdminInput {
  name: String!
  username: String!
  email: String!
  password: String!
}

input LoginDTO {
  identifier: String!
  password: String!
}

input UpdateUserInput {
  name: String
  username: String
  email: String
  profilePhoto: String
  education: String
  designation: String
  location: String
  bio: String
  links: [LinkInput!]
  skills: [String!]
  workInfo: [WorkInfoInput!]
}
